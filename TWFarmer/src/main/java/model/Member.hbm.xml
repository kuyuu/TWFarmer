<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping >  <!-- default-lazy="false" -->
    <!-- 本檔案描述的類別(ch05.ex09.model.Member)與
                       表格名稱(MemberExample)         -->
    <!-- 所有欄位都需要在Member.java內準備Getter/Setter，缺一不可    -->
	<class name="ch05.ex09.model.Member" table="MemberExample" >
	    <!-- name: 類別內的性質(property)名稱，column: 表格內的欄位名稱  -->
	    <!-- 表示當永續本類別的物件時，性質pk的值會儲存到表格的PK欄位內  -->
		<id name="pk" column="PK" type="java.lang.Integer">
		   <generator class="native" />
		</id>
		<!-- 省略length屬性時， 如果欄位型態為varchar，則預設值為255，如果欄位型態為int，則預設值為11 -->
        <!-- 省略type屬性時，Hibernate會用Reflection來推算每個欄位的型態， 如果欄位型態為varchar，則預設值為
             255，如果欄位型態為int，則預設值為11.。  -->
		<!-- 表示當永續本類別的物件時，性質userId的值會儲存到表格的account欄位內  -->
		<property name="userId"  column="account" length="32" />
		<!-- 省略column屬性時，它的內含值與name屬性相同-->
		<property name="password" length="32" />
		<property name="name"     length="32" />
		<property name="email" length="64"  />
		<property name="tel"  length="20" />
		<property name="experience" />
		
	</class>
</hibernate-mapping>
